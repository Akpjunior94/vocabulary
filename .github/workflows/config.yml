name: vocabulary-CI

on: [push, pull_request]

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: lint
      uses: actions/setup-node@v1
      with:
        node-version: '12.16.1'
    - name: Cache Node.js modules
      id: cache-node-modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-

    - name: 'Install dependencies'
      if: steps.cache-node-modules.output.cache-hit != 'true'
      run: npm install

    - name: 'Run lint'
      run: npm run lint

      env:
        CI: true

  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: test
      uses: actions/setup-node@v1
      with:
        node-version: '12.16.1'
    - name: Cache Node.js modules
      id: cache-node-modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
  
    - name: 'Install dependencies'
      if: steps.cache-node-modules.output.cache-hit != 'true'
      run: npm install

    - name: 'Run tests'
      run: npm run test
  
      env:
        CI: true

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: build
      uses: actions/setup-node@v1
      with:
        node-version: '12.16.1'
    - name: Cache Node.js modules
      id: cache-node-modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
  
    - name: 'Install dependencies'
      if: steps.cache-node-modules.output.cache-hit != 'true'
      run: npm install
  
    - name: 'Run build'
      run: npm run build
  
      env:
        CI: true
